/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MealManagementSystem;


import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author tiger
 */
public class DBSetup extends javax.swing.JFrame {
  
    /**
     * Creates new form DBSetup
     */
    public DBSetup() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField4 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDatabase = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtServer = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        jTextField4.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Database Setup");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Settings");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Server :");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Database :");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Username :");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Password :");

        jButton1.setBackground(new java.awt.Color(0, 255, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Setup");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(102, 204, 0));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("getInfo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Database Should Be MySQL");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(44, 44, 44)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jLabel6)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

         //jdbc:sqlite:C:/sqlite/db/chinook.db
          String path;
     
          
          
          
        try {
            String currentDir = new java.io.File( "." ).getCanonicalPath();
            Connection conn;
            Statement st;
           
            path = new File(".").getCanonicalPath();
            
            String server = txtServer.getText().trim();
            String database = txtDatabase.getText().trim();
            String username = txtUsername.getText().trim();
            String password = txtPassword.getText().trim();
            /*
            Here I have commented out a line that is needed for running your application when you release
            But when you work on this idea comment out below line and uncomment upper line
            This was a big problem for me when I am developing this application.
            
            */
            
            //conn = DriverManager.getConnection("jdbc:sqlite:dbconfig.db");
            conn = DriverManager.getConnection("jdbc:sqlite:"+getRealPath()+"/dbconfig.db");
            
            st = conn.createStatement();
           
            String updateQuery = "UPDATE info SET server='"+server+"',database='"+database+"',user='"+username+"',pass='"+password+"'";
            
         
            if(server.isEmpty() == false && database.isEmpty() == false && username.isEmpty() == false && password.isEmpty() == false){
                try{
                
                st.execute(updateQuery);
                JOptionPane.showConfirmDialog(null, "Database Setup Success", "Database Setup Success", JOptionPane.DEFAULT_OPTION, JOptionPane.OK_OPTION);
                
                }catch(HeadlessException | SQLException ex){
                   System.out.println(ex) ;
                }finally{
                    conn.close();
                    st.close();
                }
                
            }else{
                JOptionPane.showConfirmDialog(null,"Validation Error \n Please Contact with Administrator","Error!!",JOptionPane.DEFAULT_OPTION,JOptionPane.OK_OPTION);

            }
         
            
        } catch (IOException | SQLException ex) {
            //Logger.getLogger(DBSetup.class.getName()).log(Level.SEVERE, null, ex);
    
        } catch (URISyntaxException ex) {
            Logger.getLogger(DBSetup.class.getName()).log(Level.SEVERE, null, ex);
        }
        

         
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     
        //JOptionPane.showConfirmDialog(null, location, "Location Information", JOptionPane.DEFAULT_OPTION, JOptionPane.OK_OPTION);
        
      
     
      JOptionPane.showConfirmDialog(null, "\n Server= "+getServer()+"\n Database= "+getDatabase()+"\n Username = "+getUser()+"\n Password= "+getPass(), "Database Information", JOptionPane.DEFAULT_OPTION, JOptionPane.OK_OPTION);

       
    }//GEN-LAST:event_jButton2ActionPerformed

 //===================
    public String getLocationOwn(){
        String loc=  String.valueOf(this.getClass().getProtectionDomain().getCodeSource().getLocation());
        String strArray[] = loc.split("/");
        String location = "/";
        for(int i = 1;i<strArray.length -2;i++){
           location = location + strArray[i]+"/";
        }
        return location;
    }
   
    public String getServer(){
        
        Connection c;
        Statement s;
        ResultSet r;
        String path;
        String q = "SELECT * FROM info";
        try {
            path = new File(".").getCanonicalPath();
            try {
                 String currentDir = new java.io.File( "." ).getCanonicalPath();
                 
                    /*
                    Here I have commented out a line that is needed for running your application when you release
                    But when you work on this idea comment out below line and uncomment upper line
                    This was a big problem for me when I am developing this application.

                    */

                    //c = DriverManager.getConnection("jdbc:sqlite:dbconfig.db");
                c = DriverManager.getConnection("jdbc:sqlite:"+getRealPath()+"/dbconfig.db");
                s = c.createStatement();
                r = s.executeQuery(q);
                
                while(r.next()){
                    String server = r.getString("server");
                   return server.trim();
                
               
                }
                c.close();
                r.close();
                s.close();
            } catch (SQLException ex) {
                Logger.getLogger(DBSetup.class.getName()).log(Level.SEVERE, null, ex);
            } catch (URISyntaxException ex) {
                Logger.getLogger(DBSetup.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            Logger.getLogger(DBSetup.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
        return "error";
    }
    public String getDatabase(){
        Connection c;
        Statement s;
        ResultSet r;
        String path;
        String q = "SELECT * FROM info";
        try {
            path = new File(".").getCanonicalPath();
            try {
                 String currentDir = new java.io.File( "." ).getCanonicalPath();
                     /*
                    Here I have commented out a line that is needed for running your application when you release
                    But when you work on this idea comment out below line and uncomment upper line
                    This was a big problem for me when I am developing this application.

                    */

                    //c = DriverManager.getConnection("jdbc:sqlite:dbconfig.db");
                c = DriverManager.getConnection("jdbc:sqlite:"+getRealPath()+"/dbconfig.db");
                s = c.createStatement();
                r = s.executeQuery(q);
                while(r.next()){
                    String server = r.getString("database");
                   return server.trim();
                   
                }
                c.close();
                r.close();
                s.close();
            } catch (SQLException ex) {
                Logger.getLogger(DBSetup.class.getName()).log(Level.SEVERE, null, ex);
            } catch (URISyntaxException ex) {
                Logger.getLogger(DBSetup.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            Logger.getLogger(DBSetup.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
        return "error";
    }    
    public String getUser(){
        Connection c;
        Statement s;
        ResultSet r;
        String path;
        String q = "SELECT * FROM info";
        try {
            path = new File(".").getCanonicalPath();
            try {
                    /*
                    Here I have commented out a line that is needed for running your application when you release
                    But when you work on this idea comment out below line and uncomment upper line
                    This was a big problem for me when I am developing this application.

                    */

                    //c = DriverManager.getConnection("jdbc:sqlite:dbconfig.db");
                 String currentDir = new java.io.File( "." ).getCanonicalPath();
                c = DriverManager.getConnection("jdbc:sqlite:"+getRealPath()+"/dbconfig.db");
                s = c.createStatement();
                r = s.executeQuery(q);
                while(r.next()){
                    String server = r.getString("user");
                   return server.trim();
                   
                }
                c.close();
                r.close();
                s.close();
            } catch (SQLException ex) {
                Logger.getLogger(DBSetup.class.getName()).log(Level.SEVERE, null, ex);
            } catch (URISyntaxException ex) {
                Logger.getLogger(DBSetup.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            Logger.getLogger(DBSetup.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
        return "error";
    }
    public String getPass(){
        Connection c;
        Statement s;
        ResultSet r;
        String path;
        String q = "SELECT * FROM info";
        try {
            path = new File(".").getCanonicalPath();
            try {
                    /*
                    Here I have commented out a line that is needed for running your application when you release
                    But when you work on this idea comment out below line and uncomment upper line
                    This was a big problem for me when I am developing this application.

                    */

                    //c = DriverManager.getConnection("jdbc:sqlite:dbconfig.db");
                 String currentDir = new java.io.File( "." ).getCanonicalPath();
                c = DriverManager.getConnection("jdbc:sqlite:"+getRealPath()+"/dbconfig.db");
                s = c.createStatement();
                r = s.executeQuery(q);
                while(r.next()){
                    String server = r.getString("pass");
                   return server.trim();
                   
                }
                c.close();
                r.close();
                s.close();
            } catch (SQLException ex) {
                Logger.getLogger(DBSetup.class.getName()).log(Level.SEVERE, null, ex);
            } catch (URISyntaxException ex) {
                Logger.getLogger(DBSetup.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            Logger.getLogger(DBSetup.class.getName()).log(Level.SEVERE, null, ex);
        }

        return "error";
    }
    public String getRealPath() throws URISyntaxException{
        File pto = new File(DBSetup.class.getProtectionDomain().getCodeSource().getLocation().toURI());
        String path = pto.getAbsolutePath();
        String realPath = "";
      
        for(int i=0;i<path.split("/").length-1;i++){
            realPath += path.split("/")[i]+"/";
        }
        return realPath;
    }

    //===============================
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DBSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DBSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DBSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DBSetup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DBSetup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField txtDatabase;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtServer;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
